export const evidenceInclude: true;
/** @typedef {typeof __propDef.props}  SankeyDiagramProps */
/** @typedef {typeof __propDef.events}  SankeyDiagramEvents */
/** @typedef {typeof __propDef.slots}  SankeyDiagramSlots */
export default class SankeyDiagram extends SvelteComponent<{
    depthOverride: any;
    title?: any;
    data?: any;
    sort?: boolean | undefined;
    valueCol?: string | undefined;
    valueFmt?: any;
    echartsOptions?: any;
    printEchartsConfig?: boolean | undefined;
    subtitle?: any;
    colorPalette?: any;
    chartAreaHeight?: string | undefined;
    outlineColor?: any;
    outlineWidth?: any;
    percentFmt?: any;
    sourceCol?: string | undefined;
    targetCol?: string | undefined;
    percentCol?: any;
    nodeLabels?: string | undefined;
    linkLabels?: any;
    nodeAlign?: string | undefined;
    nodeGap?: number | undefined;
    nodeWidth?: number | undefined;
    orient?: string | undefined;
    linkColor?: string | undefined;
}, {
    [evt: string]: CustomEvent<any>;
}, {}> {
}
export type SankeyDiagramProps = typeof __propDef.props;
export type SankeyDiagramEvents = typeof __propDef.events;
export type SankeyDiagramSlots = typeof __propDef.slots;
import { SvelteComponent } from "svelte";
declare const __propDef: {
    props: {
        depthOverride: any;
        title?: any;
        data?: any;
        sort?: boolean | undefined;
        valueCol?: string | undefined;
        valueFmt?: any;
        echartsOptions?: any;
        printEchartsConfig?: boolean | undefined;
        subtitle?: any;
        colorPalette?: any;
        chartAreaHeight?: string | undefined;
        outlineColor?: any;
        outlineWidth?: any;
        percentFmt?: any;
        sourceCol?: string | undefined;
        targetCol?: string | undefined;
        percentCol?: any;
        nodeLabels?: string | undefined;
        linkLabels?: any;
        nodeAlign?: string | undefined;
        nodeGap?: number | undefined;
        nodeWidth?: number | undefined;
        orient?: string | undefined;
        linkColor?: string | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
    exports?: undefined;
    bindings?: undefined;
};
export {};
