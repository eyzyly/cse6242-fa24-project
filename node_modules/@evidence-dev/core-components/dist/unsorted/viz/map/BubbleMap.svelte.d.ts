export const evidenceInclude: true;
/** @typedef {typeof __propDef.props}  BubbleMapProps */
/** @typedef {typeof __propDef.events}  BubbleMapEvents */
/** @typedef {typeof __propDef.slots}  BubbleMapSlots */
export default class BubbleMap extends SvelteComponent<{
    [x: string]: any;
    data: any;
    title?: string | undefined;
    size?: number | undefined;
    height?: number | undefined;
    long?: string | undefined;
    emptySet?: "warn" | "error" | "pass" | undefined;
    emptyMessage?: string | undefined;
    legend?: boolean | undefined;
    colorPalette?: string[] | undefined;
    attribution?: string | undefined;
    legendType?: "categorical" | "scalar" | undefined;
    legendPosition?: "bottomLeft" | "topLeft" | "topRight" | "bottomRight" | undefined;
    startingLat?: number | undefined;
    startingLong?: number | undefined;
    startingZoom?: number | undefined;
    basemap?: string | undefined;
    lat?: string | undefined;
}, {
    [evt: string]: CustomEvent<any>;
}, {}> {
}
export type BubbleMapProps = typeof __propDef.props;
export type BubbleMapEvents = typeof __propDef.events;
export type BubbleMapSlots = typeof __propDef.slots;
import { SvelteComponent } from "svelte";
declare const __propDef: {
    props: {
        [x: string]: any;
        data: any;
        title?: string | undefined;
        size?: number | undefined;
        height?: number | undefined;
        long?: string | undefined;
        emptySet?: 'pass' | 'warn' | 'error' | undefined;
        emptyMessage?: string | undefined;
        legend?: boolean | undefined;
        colorPalette?: string[] | undefined;
        attribution?: string | undefined;
        legendType?: 'categorical' | 'scalar' | undefined;
        legendPosition?: "bottomLeft" | "topLeft" | "topRight" | "bottomRight" | undefined;
        startingLat?: number | undefined;
        startingLong?: number | undefined;
        startingZoom?: number | undefined;
        basemap?: string | undefined;
        lat?: string | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
    exports?: undefined;
    bindings?: undefined;
};
export {};
