{"mappings":"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","sources":["packages/lib/preprocess/src/frontmatter/parse-frontmatter.cjs","packages/lib/preprocess/src/frontmatter/frontmatter.regex.cjs","packages/lib/preprocess/src/frontmatter/handle-og.cjs","packages/lib/preprocess/index.cjs","packages/lib/preprocess/src/utils/highlighter.cjs","packages/lib/preprocess/src/utils/get-prism-langs.cjs","node_modules/.pnpm/prismjs@1.29.0/node_modules/prismjs/components.js","packages/lib/preprocess/src/utils/supportedLanguages.cjs","packages/lib/preprocess/src/add-script-tags.cjs","packages/lib/preprocess/src/process-queries.cjs","packages/lib/preprocess/src/utils/get-route-hash.cjs","packages/lib/preprocess/src/extract-queries/extract-queries.cjs","packages/lib/preprocess/src/add-classes.cjs","packages/lib/preprocess/src/frontmatter/process-frontmatter.cjs","packages/lib/preprocess/src/partials/inject-partials.cjs"],"sourcesContent":["const yaml = require('yaml');\nconst { containsFrontmatter } = require('./frontmatter.regex.cjs');\n/**\n * @param {string} content File Content\n * @returns {any}\n */\nconst parseFrontmatter = (content) => {\n\t// Run against regex\n\tconst frontmatter = containsFrontmatter(content);\n\tif (frontmatter) {\n\t\treturn yaml.parse(frontmatter) ?? {};\n\t}\n\n\t// No match for frontmatter\n\treturn undefined;\n};\n\nmodule.exports = { parseFrontmatter };\n","const frontmatterRegex = /^\\s*---((?:.|\\s)+?)---/;\n/**\n * @param {string} toCheck\n * @returns {string | false}\n */\nconst containsFrontmatter = (toCheck) => frontmatterRegex.exec(toCheck)?.[1] ?? false;\nmodule.exports = {\n\tfrontmatterRegex,\n\tcontainsFrontmatter\n};\n","module.exports = `\n<!-- \n    MDSvex comes in handy here because it takes frontmatter and shoves it into the metadata object.\n    This means that all we need to do is build out the expected page metadata\n-->\n<!-- Show title as h1 if defined, and not hidden -->\n{#if typeof metadata !== \"undefined\" && (metadata.title || metadata.og?.title) && metadata.hide_title !== true}\n<h1 class=\"title\">{metadata.title ?? metadata.og?.title}</h1>\n{/if}\n<svelte:head>\n<!-- Title has a default case; so we need to handle it in a special way -->\n{#if typeof metadata !== \"undefined\" && (metadata.title || metadata.og?.title)}\n<title>{metadata.title ?? metadata.og?.title}</title>\n<meta property=\"og:title\" content={metadata.og?.title ?? metadata.title} />\n<meta name=\"twitter:title\" content={metadata.og?.title ?? metadata.title} />\n{:else}\n<!-- EITHER there is no metadata, or there is no specified style -->\n<title>Evidence</title>\n{/if}\n\n<!-- default twitter cardtags -->\n<meta name=\"twitter:card\" content=\"summary\" />\n<meta name=\"twitter:site\" content=\"@evidence_dev\" />\n\n{#if typeof metadata === \"object\"}\n{#if metadata.description || metadata.og?.description}\n  <meta\n    name=\"description\"\n    content={metadata.description ?? metadata.og?.description}\n  />\n  <meta\n    property=\"og:description\"\n    content={metadata.og?.description ?? metadata.description}\n  />\n  <meta\n    name=\"twitter:description\"\n    content={metadata.og?.description ?? metadata.description}\n  />\n{/if}\n{#if metadata.og?.image}\n  <meta property=\"og:image\" content={addBasePath(metadata.og?.image)} />\n  <meta name=\"twitter:image\" content={addBasePath(metadata.og?.image)} />\n{/if}\n{/if}\n</svelte:head>\n`;\n","const mdsvex = require('mdsvex');\nconst { highlighter } = require('./src/utils/highlighter.cjs');\nconst addScriptTags = require('./src/add-script-tags.cjs');\nconst processQueries = require('./src/process-queries.cjs');\nconst addClasses = require('./src/add-classes.cjs');\n// This is includes future proofing to add support for Prism highlighting\nconst processFrontmatter = require('./src/frontmatter/process-frontmatter.cjs');\nconst injectPartials = require('./src/partials/inject-partials.cjs');\nconst rehypeSlug = require('rehype-slug');\nconst rehypeAutolinkHeadings = require('rehype-autolink-headings');\n\nmodule.exports = function evidencePreprocess(componentDevelopmentMode = false) {\n\treturn [\n\t\tinjectPartials,\n\t\taddScriptTags,\n\t\tprocessQueries.processQueries(componentDevelopmentMode),\n\t\tmdsvex.mdsvex({\n\t\t\textensions: ['.md'],\n\t\t\tsmartypants: {\n\t\t\t\tquotes: false,\n\t\t\t\tellipses: true,\n\t\t\t\tbackticks: true,\n\t\t\t\tdashes: 'oldschool'\n\t\t\t},\n\t\t\thighlight: {\n\t\t\t\thighlighter\n\t\t\t},\n\t\t\trehypePlugins: [\n\t\t\t\t[\n\t\t\t\t\taddClasses,\n\t\t\t\t\t{\n\t\t\t\t\t\t'*': 'markdown'\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t[rehypeSlug],\n\t\t\t\t[\n\t\t\t\t\trehypeAutolinkHeadings,\n\t\t\t\t\t{\n\t\t\t\t\t\tbehavior: 'wrap',\n\t\t\t\t\t\tproperties: {}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t}),\n\n\t\t// Add both script tags to all markdown files, if they are missing\n\t\tprocessFrontmatter()\n\t];\n};\nmodule.exports.parseFrontmatter =\n\trequire('./src/frontmatter/parse-frontmatter.cjs').parseFrontmatter;\nconst extractQueries = require('./src/extract-queries/extract-queries.cjs');\nmodule.exports.extractQueries = extractQueries.extractQueries;\nmodule.exports.getQueryIds = extractQueries.getQueryIds;\nmodule.exports.injectPartials = injectPartials.injectPartials;\nmodule.exports.processQueries = processQueries.processQueries;\nmodule.exports.injectedEvidenceImports = processQueries.injectedEvidenceImports;\n","const getPrismLangs = require('./get-prism-langs.cjs');\n\n/**\n *\n * @param {string} code\n * @param {string} lang\n * @param {string} [meta]\n * @returns\n */\nfunction highlighter(code, lang, meta) {\n\tcode = code.replace(/'/g, '&apos;');\n\tcode = code.replace(/\"/g, '&quot;');\n\n\t// Replace curly braces or Svelte will try to evaluate as a JS expression\n\tcode = code.replace(/{/g, '&lbrace;').replace(/}/g, '&rbrace;');\n\tif ((lang?.toLowerCase() === 'sql' && meta) || !getPrismLangs().has(lang?.toLowerCase() ?? '')) {\n\t\tconst queryId = lang?.toLowerCase() === 'sql' && meta ? meta : lang;\n\t\treturn `\n        {#if ${queryId} }\n            <QueryViewer\n                queryID = \"${queryId ?? 'untitled'}\"\n                queryResult = {${queryId ?? 'untitled'}}\n            /> \n        {/if}\n        `;\n\t}\n\t// Ensure that \"real\" code blocks are rendered not run as queries\n\treturn `<CodeBlock source=\"${code}\" copyToClipboard=true language=\"${lang}\"/>`;\n}\n\nmodule.exports = { highlighter };\n","const PrismComponents = require('prismjs/components');\n\nconst { supportedLangs } = require('./supportedLanguages.cjs');\n\n/**\n * @returns {Set<string>}\n */\nconst getPrismLangs = function () {\n\tlet prismLangs = new Set();\n\n\tsupportedLangs.forEach((supportedLanguage) => {\n\t\tprismLangs.add(supportedLanguage);\n\t\tif (supportedLanguage in PrismComponents.languages) {\n\t\t\tconst languageComponent = PrismComponents.languages[supportedLanguage];\n\t\t\tif (languageComponent.alias) {\n\t\t\t\tif (Array.isArray(languageComponent.alias)) {\n\t\t\t\t\t/** @type {string[]} */ (languageComponent.alias).forEach((a) => prismLangs.add(a));\n\t\t\t\t} else {\n\t\t\t\t\tprismLangs.add(languageComponent.alias);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn prismLangs;\n};\nmodule.exports = getPrismLangs;\n","var components = {\"core\":{\"meta\":{\"path\":\"components/prism-core.js\",\"option\":\"mandatory\"},\"core\":\"Core\"},\"themes\":{\"meta\":{\"path\":\"themes/{id}.css\",\"link\":\"index.html?theme={id}\",\"exclusive\":true},\"prism\":{\"title\":\"Default\",\"option\":\"default\"},\"prism-dark\":\"Dark\",\"prism-funky\":\"Funky\",\"prism-okaidia\":{\"title\":\"Okaidia\",\"owner\":\"ocodia\"},\"prism-twilight\":{\"title\":\"Twilight\",\"owner\":\"remybach\"},\"prism-coy\":{\"title\":\"Coy\",\"owner\":\"tshedor\"},\"prism-solarizedlight\":{\"title\":\"Solarized Light\",\"owner\":\"hectormatos2011 \"},\"prism-tomorrow\":{\"title\":\"Tomorrow Night\",\"owner\":\"Rosey\"}},\"languages\":{\"meta\":{\"path\":\"components/prism-{id}\",\"noCSS\":true,\"examplesPath\":\"examples/prism-{id}\",\"addCheckAll\":true},\"markup\":{\"title\":\"Markup\",\"alias\":[\"html\",\"xml\",\"svg\",\"mathml\",\"ssml\",\"atom\",\"rss\"],\"aliasTitles\":{\"html\":\"HTML\",\"xml\":\"XML\",\"svg\":\"SVG\",\"mathml\":\"MathML\",\"ssml\":\"SSML\",\"atom\":\"Atom\",\"rss\":\"RSS\"},\"option\":\"default\"},\"css\":{\"title\":\"CSS\",\"option\":\"default\",\"modify\":\"markup\"},\"clike\":{\"title\":\"C-like\",\"option\":\"default\"},\"javascript\":{\"title\":\"JavaScript\",\"require\":\"clike\",\"modify\":\"markup\",\"optional\":\"regex\",\"alias\":\"js\",\"option\":\"default\"},\"abap\":{\"title\":\"ABAP\",\"owner\":\"dellagustin\"},\"abnf\":{\"title\":\"ABNF\",\"owner\":\"RunDevelopment\"},\"actionscript\":{\"title\":\"ActionScript\",\"require\":\"javascript\",\"modify\":\"markup\",\"owner\":\"Golmote\"},\"ada\":{\"title\":\"Ada\",\"owner\":\"Lucretia\"},\"agda\":{\"title\":\"Agda\",\"owner\":\"xy-ren\"},\"al\":{\"title\":\"AL\",\"owner\":\"RunDevelopment\"},\"antlr4\":{\"title\":\"ANTLR4\",\"alias\":\"g4\",\"owner\":\"RunDevelopment\"},\"apacheconf\":{\"title\":\"Apache Configuration\",\"owner\":\"GuiTeK\"},\"apex\":{\"title\":\"Apex\",\"require\":[\"clike\",\"sql\"],\"owner\":\"RunDevelopment\"},\"apl\":{\"title\":\"APL\",\"owner\":\"ngn\"},\"applescript\":{\"title\":\"AppleScript\",\"owner\":\"Golmote\"},\"aql\":{\"title\":\"AQL\",\"owner\":\"RunDevelopment\"},\"arduino\":{\"title\":\"Arduino\",\"require\":\"cpp\",\"alias\":\"ino\",\"owner\":\"dkern\"},\"arff\":{\"title\":\"ARFF\",\"owner\":\"Golmote\"},\"armasm\":{\"title\":\"ARM Assembly\",\"alias\":\"arm-asm\",\"owner\":\"RunDevelopment\"},\"arturo\":{\"title\":\"Arturo\",\"alias\":\"art\",\"optional\":[\"bash\",\"css\",\"javascript\",\"markup\",\"markdown\",\"sql\"],\"owner\":\"drkameleon\"},\"asciidoc\":{\"alias\":\"adoc\",\"title\":\"AsciiDoc\",\"owner\":\"Golmote\"},\"aspnet\":{\"title\":\"ASP.NET (C#)\",\"require\":[\"markup\",\"csharp\"],\"owner\":\"nauzilus\"},\"asm6502\":{\"title\":\"6502 Assembly\",\"owner\":\"kzurawel\"},\"asmatmel\":{\"title\":\"Atmel AVR Assembly\",\"owner\":\"cerkit\"},\"autohotkey\":{\"title\":\"AutoHotkey\",\"owner\":\"aviaryan\"},\"autoit\":{\"title\":\"AutoIt\",\"owner\":\"Golmote\"},\"avisynth\":{\"title\":\"AviSynth\",\"alias\":\"avs\",\"owner\":\"Zinfidel\"},\"avro-idl\":{\"title\":\"Avro IDL\",\"alias\":\"avdl\",\"owner\":\"RunDevelopment\"},\"awk\":{\"title\":\"AWK\",\"alias\":\"gawk\",\"aliasTitles\":{\"gawk\":\"GAWK\"},\"owner\":\"RunDevelopment\"},\"bash\":{\"title\":\"Bash\",\"alias\":[\"sh\",\"shell\"],\"aliasTitles\":{\"sh\":\"Shell\",\"shell\":\"Shell\"},\"owner\":\"zeitgeist87\"},\"basic\":{\"title\":\"BASIC\",\"owner\":\"Golmote\"},\"batch\":{\"title\":\"Batch\",\"owner\":\"Golmote\"},\"bbcode\":{\"title\":\"BBcode\",\"alias\":\"shortcode\",\"aliasTitles\":{\"shortcode\":\"Shortcode\"},\"owner\":\"RunDevelopment\"},\"bbj\":{\"title\":\"BBj\",\"owner\":\"hyyan\"},\"bicep\":{\"title\":\"Bicep\",\"owner\":\"johnnyreilly\"},\"birb\":{\"title\":\"Birb\",\"require\":\"clike\",\"owner\":\"Calamity210\"},\"bison\":{\"title\":\"Bison\",\"require\":\"c\",\"owner\":\"Golmote\"},\"bnf\":{\"title\":\"BNF\",\"alias\":\"rbnf\",\"aliasTitles\":{\"rbnf\":\"RBNF\"},\"owner\":\"RunDevelopment\"},\"bqn\":{\"title\":\"BQN\",\"owner\":\"yewscion\"},\"brainfuck\":{\"title\":\"Brainfuck\",\"owner\":\"Golmote\"},\"brightscript\":{\"title\":\"BrightScript\",\"owner\":\"RunDevelopment\"},\"bro\":{\"title\":\"Bro\",\"owner\":\"wayward710\"},\"bsl\":{\"title\":\"BSL (1C:Enterprise)\",\"alias\":\"oscript\",\"aliasTitles\":{\"oscript\":\"OneScript\"},\"owner\":\"Diversus23\"},\"c\":{\"title\":\"C\",\"require\":\"clike\",\"owner\":\"zeitgeist87\"},\"csharp\":{\"title\":\"C#\",\"require\":\"clike\",\"alias\":[\"cs\",\"dotnet\"],\"owner\":\"mvalipour\"},\"cpp\":{\"title\":\"C++\",\"require\":\"c\",\"owner\":\"zeitgeist87\"},\"cfscript\":{\"title\":\"CFScript\",\"require\":\"clike\",\"alias\":\"cfc\",\"owner\":\"mjclemente\"},\"chaiscript\":{\"title\":\"ChaiScript\",\"require\":[\"clike\",\"cpp\"],\"owner\":\"RunDevelopment\"},\"cil\":{\"title\":\"CIL\",\"owner\":\"sbrl\"},\"cilkc\":{\"title\":\"Cilk/C\",\"require\":\"c\",\"alias\":\"cilk-c\",\"owner\":\"OpenCilk\"},\"cilkcpp\":{\"title\":\"Cilk/C++\",\"require\":\"cpp\",\"alias\":[\"cilk-cpp\",\"cilk\"],\"owner\":\"OpenCilk\"},\"clojure\":{\"title\":\"Clojure\",\"owner\":\"troglotit\"},\"cmake\":{\"title\":\"CMake\",\"owner\":\"mjrogozinski\"},\"cobol\":{\"title\":\"COBOL\",\"owner\":\"RunDevelopment\"},\"coffeescript\":{\"title\":\"CoffeeScript\",\"require\":\"javascript\",\"alias\":\"coffee\",\"owner\":\"R-osey\"},\"concurnas\":{\"title\":\"Concurnas\",\"alias\":\"conc\",\"owner\":\"jasontatton\"},\"csp\":{\"title\":\"Content-Security-Policy\",\"owner\":\"ScottHelme\"},\"cooklang\":{\"title\":\"Cooklang\",\"owner\":\"ahue\"},\"coq\":{\"title\":\"Coq\",\"owner\":\"RunDevelopment\"},\"crystal\":{\"title\":\"Crystal\",\"require\":\"ruby\",\"owner\":\"MakeNowJust\"},\"css-extras\":{\"title\":\"CSS Extras\",\"require\":\"css\",\"modify\":\"css\",\"owner\":\"milesj\"},\"csv\":{\"title\":\"CSV\",\"owner\":\"RunDevelopment\"},\"cue\":{\"title\":\"CUE\",\"owner\":\"RunDevelopment\"},\"cypher\":{\"title\":\"Cypher\",\"owner\":\"RunDevelopment\"},\"d\":{\"title\":\"D\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"dart\":{\"title\":\"Dart\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"dataweave\":{\"title\":\"DataWeave\",\"owner\":\"machaval\"},\"dax\":{\"title\":\"DAX\",\"owner\":\"peterbud\"},\"dhall\":{\"title\":\"Dhall\",\"owner\":\"RunDevelopment\"},\"diff\":{\"title\":\"Diff\",\"owner\":\"uranusjr\"},\"django\":{\"title\":\"Django/Jinja2\",\"require\":\"markup-templating\",\"alias\":\"jinja2\",\"owner\":\"romanvm\"},\"dns-zone-file\":{\"title\":\"DNS zone file\",\"owner\":\"RunDevelopment\",\"alias\":\"dns-zone\"},\"docker\":{\"title\":\"Docker\",\"alias\":\"dockerfile\",\"owner\":\"JustinBeckwith\"},\"dot\":{\"title\":\"DOT (Graphviz)\",\"alias\":\"gv\",\"optional\":\"markup\",\"owner\":\"RunDevelopment\"},\"ebnf\":{\"title\":\"EBNF\",\"owner\":\"RunDevelopment\"},\"editorconfig\":{\"title\":\"EditorConfig\",\"owner\":\"osipxd\"},\"eiffel\":{\"title\":\"Eiffel\",\"owner\":\"Conaclos\"},\"ejs\":{\"title\":\"EJS\",\"require\":[\"javascript\",\"markup-templating\"],\"owner\":\"RunDevelopment\",\"alias\":\"eta\",\"aliasTitles\":{\"eta\":\"Eta\"}},\"elixir\":{\"title\":\"Elixir\",\"owner\":\"Golmote\"},\"elm\":{\"title\":\"Elm\",\"owner\":\"zwilias\"},\"etlua\":{\"title\":\"Embedded Lua templating\",\"require\":[\"lua\",\"markup-templating\"],\"owner\":\"RunDevelopment\"},\"erb\":{\"title\":\"ERB\",\"require\":[\"ruby\",\"markup-templating\"],\"owner\":\"Golmote\"},\"erlang\":{\"title\":\"Erlang\",\"owner\":\"Golmote\"},\"excel-formula\":{\"title\":\"Excel Formula\",\"alias\":[\"xlsx\",\"xls\"],\"owner\":\"RunDevelopment\"},\"fsharp\":{\"title\":\"F#\",\"require\":\"clike\",\"owner\":\"simonreynolds7\"},\"factor\":{\"title\":\"Factor\",\"owner\":\"catb0t\"},\"false\":{\"title\":\"False\",\"owner\":\"edukisto\"},\"firestore-security-rules\":{\"title\":\"Firestore security rules\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"flow\":{\"title\":\"Flow\",\"require\":\"javascript\",\"owner\":\"Golmote\"},\"fortran\":{\"title\":\"Fortran\",\"owner\":\"Golmote\"},\"ftl\":{\"title\":\"FreeMarker Template Language\",\"require\":\"markup-templating\",\"owner\":\"RunDevelopment\"},\"gml\":{\"title\":\"GameMaker Language\",\"alias\":\"gamemakerlanguage\",\"require\":\"clike\",\"owner\":\"LiarOnce\"},\"gap\":{\"title\":\"GAP (CAS)\",\"owner\":\"RunDevelopment\"},\"gcode\":{\"title\":\"G-code\",\"owner\":\"RunDevelopment\"},\"gdscript\":{\"title\":\"GDScript\",\"owner\":\"RunDevelopment\"},\"gedcom\":{\"title\":\"GEDCOM\",\"owner\":\"Golmote\"},\"gettext\":{\"title\":\"gettext\",\"alias\":\"po\",\"owner\":\"RunDevelopment\"},\"gherkin\":{\"title\":\"Gherkin\",\"owner\":\"hason\"},\"git\":{\"title\":\"Git\",\"owner\":\"lgiraudel\"},\"glsl\":{\"title\":\"GLSL\",\"require\":\"c\",\"owner\":\"Golmote\"},\"gn\":{\"title\":\"GN\",\"alias\":\"gni\",\"owner\":\"RunDevelopment\"},\"linker-script\":{\"title\":\"GNU Linker Script\",\"alias\":\"ld\",\"owner\":\"RunDevelopment\"},\"go\":{\"title\":\"Go\",\"require\":\"clike\",\"owner\":\"arnehormann\"},\"go-module\":{\"title\":\"Go module\",\"alias\":\"go-mod\",\"owner\":\"RunDevelopment\"},\"gradle\":{\"title\":\"Gradle\",\"require\":\"clike\",\"owner\":\"zeabdelkhalek-badido18\"},\"graphql\":{\"title\":\"GraphQL\",\"optional\":\"markdown\",\"owner\":\"Golmote\"},\"groovy\":{\"title\":\"Groovy\",\"require\":\"clike\",\"owner\":\"robfletcher\"},\"haml\":{\"title\":\"Haml\",\"require\":\"ruby\",\"optional\":[\"css\",\"css-extras\",\"coffeescript\",\"erb\",\"javascript\",\"less\",\"markdown\",\"scss\",\"textile\"],\"owner\":\"Golmote\"},\"handlebars\":{\"title\":\"Handlebars\",\"require\":\"markup-templating\",\"alias\":[\"hbs\",\"mustache\"],\"aliasTitles\":{\"mustache\":\"Mustache\"},\"owner\":\"Golmote\"},\"haskell\":{\"title\":\"Haskell\",\"alias\":\"hs\",\"owner\":\"bholst\"},\"haxe\":{\"title\":\"Haxe\",\"require\":\"clike\",\"optional\":\"regex\",\"owner\":\"Golmote\"},\"hcl\":{\"title\":\"HCL\",\"owner\":\"outsideris\"},\"hlsl\":{\"title\":\"HLSL\",\"require\":\"c\",\"owner\":\"RunDevelopment\"},\"hoon\":{\"title\":\"Hoon\",\"owner\":\"matildepark\"},\"http\":{\"title\":\"HTTP\",\"optional\":[\"csp\",\"css\",\"hpkp\",\"hsts\",\"javascript\",\"json\",\"markup\",\"uri\"],\"owner\":\"danielgtaylor\"},\"hpkp\":{\"title\":\"HTTP Public-Key-Pins\",\"owner\":\"ScottHelme\"},\"hsts\":{\"title\":\"HTTP Strict-Transport-Security\",\"owner\":\"ScottHelme\"},\"ichigojam\":{\"title\":\"IchigoJam\",\"owner\":\"BlueCocoa\"},\"icon\":{\"title\":\"Icon\",\"owner\":\"Golmote\"},\"icu-message-format\":{\"title\":\"ICU Message Format\",\"owner\":\"RunDevelopment\"},\"idris\":{\"title\":\"Idris\",\"alias\":\"idr\",\"owner\":\"KeenS\",\"require\":\"haskell\"},\"ignore\":{\"title\":\".ignore\",\"owner\":\"osipxd\",\"alias\":[\"gitignore\",\"hgignore\",\"npmignore\"],\"aliasTitles\":{\"gitignore\":\".gitignore\",\"hgignore\":\".hgignore\",\"npmignore\":\".npmignore\"}},\"inform7\":{\"title\":\"Inform 7\",\"owner\":\"Golmote\"},\"ini\":{\"title\":\"Ini\",\"owner\":\"aviaryan\"},\"io\":{\"title\":\"Io\",\"owner\":\"AlesTsurko\"},\"j\":{\"title\":\"J\",\"owner\":\"Golmote\"},\"java\":{\"title\":\"Java\",\"require\":\"clike\",\"owner\":\"sherblot\"},\"javadoc\":{\"title\":\"JavaDoc\",\"require\":[\"markup\",\"java\",\"javadoclike\"],\"modify\":\"java\",\"optional\":\"scala\",\"owner\":\"RunDevelopment\"},\"javadoclike\":{\"title\":\"JavaDoc-like\",\"modify\":[\"java\",\"javascript\",\"php\"],\"owner\":\"RunDevelopment\"},\"javastacktrace\":{\"title\":\"Java stack trace\",\"owner\":\"RunDevelopment\"},\"jexl\":{\"title\":\"Jexl\",\"owner\":\"czosel\"},\"jolie\":{\"title\":\"Jolie\",\"require\":\"clike\",\"owner\":\"thesave\"},\"jq\":{\"title\":\"JQ\",\"owner\":\"RunDevelopment\"},\"jsdoc\":{\"title\":\"JSDoc\",\"require\":[\"javascript\",\"javadoclike\",\"typescript\"],\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\"],\"owner\":\"RunDevelopment\"},\"js-extras\":{\"title\":\"JS Extras\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"actionscript\",\"coffeescript\",\"flow\",\"n4js\",\"typescript\"],\"owner\":\"RunDevelopment\"},\"json\":{\"title\":\"JSON\",\"alias\":\"webmanifest\",\"aliasTitles\":{\"webmanifest\":\"Web App Manifest\"},\"owner\":\"CupOfTea696\"},\"json5\":{\"title\":\"JSON5\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"jsonp\":{\"title\":\"JSONP\",\"require\":\"json\",\"owner\":\"RunDevelopment\"},\"jsstacktrace\":{\"title\":\"JS stack trace\",\"owner\":\"sbrl\"},\"js-templates\":{\"title\":\"JS Templates\",\"require\":\"javascript\",\"modify\":\"javascript\",\"optional\":[\"css\",\"css-extras\",\"graphql\",\"markdown\",\"markup\",\"sql\"],\"owner\":\"RunDevelopment\"},\"julia\":{\"title\":\"Julia\",\"owner\":\"cdagnino\"},\"keepalived\":{\"title\":\"Keepalived Configure\",\"owner\":\"dev-itsheng\"},\"keyman\":{\"title\":\"Keyman\",\"owner\":\"mcdurdin\"},\"kotlin\":{\"title\":\"Kotlin\",\"alias\":[\"kt\",\"kts\"],\"aliasTitles\":{\"kts\":\"Kotlin Script\"},\"require\":\"clike\",\"owner\":\"Golmote\"},\"kumir\":{\"title\":\"KuMir (КуМир)\",\"alias\":\"kum\",\"owner\":\"edukisto\"},\"kusto\":{\"title\":\"Kusto\",\"owner\":\"RunDevelopment\"},\"latex\":{\"title\":\"LaTeX\",\"alias\":[\"tex\",\"context\"],\"aliasTitles\":{\"tex\":\"TeX\",\"context\":\"ConTeXt\"},\"owner\":\"japborst\"},\"latte\":{\"title\":\"Latte\",\"require\":[\"clike\",\"markup-templating\",\"php\"],\"owner\":\"nette\"},\"less\":{\"title\":\"Less\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"Golmote\"},\"lilypond\":{\"title\":\"LilyPond\",\"require\":\"scheme\",\"alias\":\"ly\",\"owner\":\"RunDevelopment\"},\"liquid\":{\"title\":\"Liquid\",\"require\":\"markup-templating\",\"owner\":\"cinhtau\"},\"lisp\":{\"title\":\"Lisp\",\"alias\":[\"emacs\",\"elisp\",\"emacs-lisp\"],\"owner\":\"JuanCaicedo\"},\"livescript\":{\"title\":\"LiveScript\",\"owner\":\"Golmote\"},\"llvm\":{\"title\":\"LLVM IR\",\"owner\":\"porglezomp\"},\"log\":{\"title\":\"Log file\",\"optional\":\"javastacktrace\",\"owner\":\"RunDevelopment\"},\"lolcode\":{\"title\":\"LOLCODE\",\"owner\":\"Golmote\"},\"lua\":{\"title\":\"Lua\",\"owner\":\"Golmote\"},\"magma\":{\"title\":\"Magma (CAS)\",\"owner\":\"RunDevelopment\"},\"makefile\":{\"title\":\"Makefile\",\"owner\":\"Golmote\"},\"markdown\":{\"title\":\"Markdown\",\"require\":\"markup\",\"optional\":\"yaml\",\"alias\":\"md\",\"owner\":\"Golmote\"},\"markup-templating\":{\"title\":\"Markup templating\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"mata\":{\"title\":\"Mata\",\"owner\":\"RunDevelopment\"},\"matlab\":{\"title\":\"MATLAB\",\"owner\":\"Golmote\"},\"maxscript\":{\"title\":\"MAXScript\",\"owner\":\"RunDevelopment\"},\"mel\":{\"title\":\"MEL\",\"owner\":\"Golmote\"},\"mermaid\":{\"title\":\"Mermaid\",\"owner\":\"RunDevelopment\"},\"metafont\":{\"title\":\"METAFONT\",\"owner\":\"LaeriExNihilo\"},\"mizar\":{\"title\":\"Mizar\",\"owner\":\"Golmote\"},\"mongodb\":{\"title\":\"MongoDB\",\"owner\":\"airs0urce\",\"require\":\"javascript\"},\"monkey\":{\"title\":\"Monkey\",\"owner\":\"Golmote\"},\"moonscript\":{\"title\":\"MoonScript\",\"alias\":\"moon\",\"owner\":\"RunDevelopment\"},\"n1ql\":{\"title\":\"N1QL\",\"owner\":\"TMWilds\"},\"n4js\":{\"title\":\"N4JS\",\"require\":\"javascript\",\"optional\":\"jsdoc\",\"alias\":\"n4jsd\",\"owner\":\"bsmith-n4\"},\"nand2tetris-hdl\":{\"title\":\"Nand To Tetris HDL\",\"owner\":\"stephanmax\"},\"naniscript\":{\"title\":\"Naninovel Script\",\"owner\":\"Elringus\",\"alias\":\"nani\"},\"nasm\":{\"title\":\"NASM\",\"owner\":\"rbmj\"},\"neon\":{\"title\":\"NEON\",\"owner\":\"nette\"},\"nevod\":{\"title\":\"Nevod\",\"owner\":\"nezaboodka\"},\"nginx\":{\"title\":\"nginx\",\"owner\":\"volado\"},\"nim\":{\"title\":\"Nim\",\"owner\":\"Golmote\"},\"nix\":{\"title\":\"Nix\",\"owner\":\"Golmote\"},\"nsis\":{\"title\":\"NSIS\",\"owner\":\"idleberg\"},\"objectivec\":{\"title\":\"Objective-C\",\"require\":\"c\",\"alias\":\"objc\",\"owner\":\"uranusjr\"},\"ocaml\":{\"title\":\"OCaml\",\"owner\":\"Golmote\"},\"odin\":{\"title\":\"Odin\",\"owner\":\"edukisto\"},\"opencl\":{\"title\":\"OpenCL\",\"require\":\"c\",\"modify\":[\"c\",\"cpp\"],\"owner\":\"Milania1\"},\"openqasm\":{\"title\":\"OpenQasm\",\"alias\":\"qasm\",\"owner\":\"RunDevelopment\"},\"oz\":{\"title\":\"Oz\",\"owner\":\"Golmote\"},\"parigp\":{\"title\":\"PARI/GP\",\"owner\":\"Golmote\"},\"parser\":{\"title\":\"Parser\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"pascal\":{\"title\":\"Pascal\",\"alias\":\"objectpascal\",\"aliasTitles\":{\"objectpascal\":\"Object Pascal\"},\"owner\":\"Golmote\"},\"pascaligo\":{\"title\":\"Pascaligo\",\"owner\":\"DefinitelyNotAGoat\"},\"psl\":{\"title\":\"PATROL Scripting Language\",\"owner\":\"bertysentry\"},\"pcaxis\":{\"title\":\"PC-Axis\",\"alias\":\"px\",\"owner\":\"RunDevelopment\"},\"peoplecode\":{\"title\":\"PeopleCode\",\"alias\":\"pcode\",\"owner\":\"RunDevelopment\"},\"perl\":{\"title\":\"Perl\",\"owner\":\"Golmote\"},\"php\":{\"title\":\"PHP\",\"require\":\"markup-templating\",\"owner\":\"milesj\"},\"phpdoc\":{\"title\":\"PHPDoc\",\"require\":[\"php\",\"javadoclike\"],\"modify\":\"php\",\"owner\":\"RunDevelopment\"},\"php-extras\":{\"title\":\"PHP Extras\",\"require\":\"php\",\"modify\":\"php\",\"owner\":\"milesj\"},\"plant-uml\":{\"title\":\"PlantUML\",\"alias\":\"plantuml\",\"owner\":\"RunDevelopment\"},\"plsql\":{\"title\":\"PL/SQL\",\"require\":\"sql\",\"owner\":\"Golmote\"},\"powerquery\":{\"title\":\"PowerQuery\",\"alias\":[\"pq\",\"mscript\"],\"owner\":\"peterbud\"},\"powershell\":{\"title\":\"PowerShell\",\"owner\":\"nauzilus\"},\"processing\":{\"title\":\"Processing\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"prolog\":{\"title\":\"Prolog\",\"owner\":\"Golmote\"},\"promql\":{\"title\":\"PromQL\",\"owner\":\"arendjr\"},\"properties\":{\"title\":\".properties\",\"owner\":\"Golmote\"},\"protobuf\":{\"title\":\"Protocol Buffers\",\"require\":\"clike\",\"owner\":\"just-boris\"},\"pug\":{\"title\":\"Pug\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"coffeescript\",\"ejs\",\"handlebars\",\"less\",\"livescript\",\"markdown\",\"scss\",\"stylus\",\"twig\"],\"owner\":\"Golmote\"},\"puppet\":{\"title\":\"Puppet\",\"owner\":\"Golmote\"},\"pure\":{\"title\":\"Pure\",\"optional\":[\"c\",\"cpp\",\"fortran\"],\"owner\":\"Golmote\"},\"purebasic\":{\"title\":\"PureBasic\",\"require\":\"clike\",\"alias\":\"pbfasm\",\"owner\":\"HeX0R101\"},\"purescript\":{\"title\":\"PureScript\",\"require\":\"haskell\",\"alias\":\"purs\",\"owner\":\"sriharshachilakapati\"},\"python\":{\"title\":\"Python\",\"alias\":\"py\",\"owner\":\"multipetros\"},\"qsharp\":{\"title\":\"Q#\",\"require\":\"clike\",\"alias\":\"qs\",\"owner\":\"fedonman\"},\"q\":{\"title\":\"Q (kdb+ database)\",\"owner\":\"Golmote\"},\"qml\":{\"title\":\"QML\",\"require\":\"javascript\",\"owner\":\"RunDevelopment\"},\"qore\":{\"title\":\"Qore\",\"require\":\"clike\",\"owner\":\"temnroegg\"},\"r\":{\"title\":\"R\",\"owner\":\"Golmote\"},\"racket\":{\"title\":\"Racket\",\"require\":\"scheme\",\"alias\":\"rkt\",\"owner\":\"RunDevelopment\"},\"cshtml\":{\"title\":\"Razor C#\",\"alias\":\"razor\",\"require\":[\"markup\",\"csharp\"],\"optional\":[\"css\",\"css-extras\",\"javascript\",\"js-extras\"],\"owner\":\"RunDevelopment\"},\"jsx\":{\"title\":\"React JSX\",\"require\":[\"markup\",\"javascript\"],\"optional\":[\"jsdoc\",\"js-extras\",\"js-templates\"],\"owner\":\"vkbansal\"},\"tsx\":{\"title\":\"React TSX\",\"require\":[\"jsx\",\"typescript\"]},\"reason\":{\"title\":\"Reason\",\"require\":\"clike\",\"owner\":\"Golmote\"},\"regex\":{\"title\":\"Regex\",\"owner\":\"RunDevelopment\"},\"rego\":{\"title\":\"Rego\",\"owner\":\"JordanSh\"},\"renpy\":{\"title\":\"Ren'py\",\"alias\":\"rpy\",\"owner\":\"HyuchiaDiego\"},\"rescript\":{\"title\":\"ReScript\",\"alias\":\"res\",\"owner\":\"vmarcosp\"},\"rest\":{\"title\":\"reST (reStructuredText)\",\"owner\":\"Golmote\"},\"rip\":{\"title\":\"Rip\",\"owner\":\"ravinggenius\"},\"roboconf\":{\"title\":\"Roboconf\",\"owner\":\"Golmote\"},\"robotframework\":{\"title\":\"Robot Framework\",\"alias\":\"robot\",\"owner\":\"RunDevelopment\"},\"ruby\":{\"title\":\"Ruby\",\"require\":\"clike\",\"alias\":\"rb\",\"owner\":\"samflores\"},\"rust\":{\"title\":\"Rust\",\"owner\":\"Golmote\"},\"sas\":{\"title\":\"SAS\",\"optional\":[\"groovy\",\"lua\",\"sql\"],\"owner\":\"Golmote\"},\"sass\":{\"title\":\"Sass (Sass)\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"Golmote\"},\"scss\":{\"title\":\"Sass (SCSS)\",\"require\":\"css\",\"optional\":\"css-extras\",\"owner\":\"MoOx\"},\"scala\":{\"title\":\"Scala\",\"require\":\"java\",\"owner\":\"jozic\"},\"scheme\":{\"title\":\"Scheme\",\"owner\":\"bacchus123\"},\"shell-session\":{\"title\":\"Shell session\",\"require\":\"bash\",\"alias\":[\"sh-session\",\"shellsession\"],\"owner\":\"RunDevelopment\"},\"smali\":{\"title\":\"Smali\",\"owner\":\"RunDevelopment\"},\"smalltalk\":{\"title\":\"Smalltalk\",\"owner\":\"Golmote\"},\"smarty\":{\"title\":\"Smarty\",\"require\":\"markup-templating\",\"optional\":\"php\",\"owner\":\"Golmote\"},\"sml\":{\"title\":\"SML\",\"alias\":\"smlnj\",\"aliasTitles\":{\"smlnj\":\"SML/NJ\"},\"owner\":\"RunDevelopment\"},\"solidity\":{\"title\":\"Solidity (Ethereum)\",\"alias\":\"sol\",\"require\":\"clike\",\"owner\":\"glachaud\"},\"solution-file\":{\"title\":\"Solution file\",\"alias\":\"sln\",\"owner\":\"RunDevelopment\"},\"soy\":{\"title\":\"Soy (Closure Template)\",\"require\":\"markup-templating\",\"owner\":\"Golmote\"},\"sparql\":{\"title\":\"SPARQL\",\"require\":\"turtle\",\"owner\":\"Triply-Dev\",\"alias\":\"rq\"},\"splunk-spl\":{\"title\":\"Splunk SPL\",\"owner\":\"RunDevelopment\"},\"sqf\":{\"title\":\"SQF: Status Quo Function (Arma 3)\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"sql\":{\"title\":\"SQL\",\"owner\":\"multipetros\"},\"squirrel\":{\"title\":\"Squirrel\",\"require\":\"clike\",\"owner\":\"RunDevelopment\"},\"stan\":{\"title\":\"Stan\",\"owner\":\"RunDevelopment\"},\"stata\":{\"title\":\"Stata Ado\",\"require\":[\"mata\",\"java\",\"python\"],\"owner\":\"RunDevelopment\"},\"iecst\":{\"title\":\"Structured Text (IEC 61131-3)\",\"owner\":\"serhioromano\"},\"stylus\":{\"title\":\"Stylus\",\"owner\":\"vkbansal\"},\"supercollider\":{\"title\":\"SuperCollider\",\"alias\":\"sclang\",\"owner\":\"RunDevelopment\"},\"swift\":{\"title\":\"Swift\",\"owner\":\"chrischares\"},\"systemd\":{\"title\":\"Systemd configuration file\",\"owner\":\"RunDevelopment\"},\"t4-templating\":{\"title\":\"T4 templating\",\"owner\":\"RunDevelopment\"},\"t4-cs\":{\"title\":\"T4 Text Templates (C#)\",\"require\":[\"t4-templating\",\"csharp\"],\"alias\":\"t4\",\"owner\":\"RunDevelopment\"},\"t4-vb\":{\"title\":\"T4 Text Templates (VB)\",\"require\":[\"t4-templating\",\"vbnet\"],\"owner\":\"RunDevelopment\"},\"tap\":{\"title\":\"TAP\",\"owner\":\"isaacs\",\"require\":\"yaml\"},\"tcl\":{\"title\":\"Tcl\",\"owner\":\"PeterChaplin\"},\"tt2\":{\"title\":\"Template Toolkit 2\",\"require\":[\"clike\",\"markup-templating\"],\"owner\":\"gflohr\"},\"textile\":{\"title\":\"Textile\",\"require\":\"markup\",\"optional\":\"css\",\"owner\":\"Golmote\"},\"toml\":{\"title\":\"TOML\",\"owner\":\"RunDevelopment\"},\"tremor\":{\"title\":\"Tremor\",\"alias\":[\"trickle\",\"troy\"],\"owner\":\"darach\",\"aliasTitles\":{\"trickle\":\"trickle\",\"troy\":\"troy\"}},\"turtle\":{\"title\":\"Turtle\",\"alias\":\"trig\",\"aliasTitles\":{\"trig\":\"TriG\"},\"owner\":\"jakubklimek\"},\"twig\":{\"title\":\"Twig\",\"require\":\"markup-templating\",\"owner\":\"brandonkelly\"},\"typescript\":{\"title\":\"TypeScript\",\"require\":\"javascript\",\"optional\":\"js-templates\",\"alias\":\"ts\",\"owner\":\"vkbansal\"},\"typoscript\":{\"title\":\"TypoScript\",\"alias\":\"tsconfig\",\"aliasTitles\":{\"tsconfig\":\"TSConfig\"},\"owner\":\"dkern\"},\"unrealscript\":{\"title\":\"UnrealScript\",\"alias\":[\"uscript\",\"uc\"],\"owner\":\"RunDevelopment\"},\"uorazor\":{\"title\":\"UO Razor Script\",\"owner\":\"jaseowns\"},\"uri\":{\"title\":\"URI\",\"alias\":\"url\",\"aliasTitles\":{\"url\":\"URL\"},\"owner\":\"RunDevelopment\"},\"v\":{\"title\":\"V\",\"require\":\"clike\",\"owner\":\"taggon\"},\"vala\":{\"title\":\"Vala\",\"require\":\"clike\",\"optional\":\"regex\",\"owner\":\"TemplarVolk\"},\"vbnet\":{\"title\":\"VB.Net\",\"require\":\"basic\",\"owner\":\"Bigsby\"},\"velocity\":{\"title\":\"Velocity\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"verilog\":{\"title\":\"Verilog\",\"owner\":\"a-rey\"},\"vhdl\":{\"title\":\"VHDL\",\"owner\":\"a-rey\"},\"vim\":{\"title\":\"vim\",\"owner\":\"westonganger\"},\"visual-basic\":{\"title\":\"Visual Basic\",\"alias\":[\"vb\",\"vba\"],\"aliasTitles\":{\"vba\":\"VBA\"},\"owner\":\"Golmote\"},\"warpscript\":{\"title\":\"WarpScript\",\"owner\":\"RunDevelopment\"},\"wasm\":{\"title\":\"WebAssembly\",\"owner\":\"Golmote\"},\"web-idl\":{\"title\":\"Web IDL\",\"alias\":\"webidl\",\"owner\":\"RunDevelopment\"},\"wgsl\":{\"title\":\"WGSL\",\"owner\":\"Dr4gonthree\"},\"wiki\":{\"title\":\"Wiki markup\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"wolfram\":{\"title\":\"Wolfram language\",\"alias\":[\"mathematica\",\"nb\",\"wl\"],\"aliasTitles\":{\"mathematica\":\"Mathematica\",\"nb\":\"Mathematica Notebook\"},\"owner\":\"msollami\"},\"wren\":{\"title\":\"Wren\",\"owner\":\"clsource\"},\"xeora\":{\"title\":\"Xeora\",\"require\":\"markup\",\"alias\":\"xeoracube\",\"aliasTitles\":{\"xeoracube\":\"XeoraCube\"},\"owner\":\"freakmaxi\"},\"xml-doc\":{\"title\":\"XML doc (.net)\",\"require\":\"markup\",\"modify\":[\"csharp\",\"fsharp\",\"vbnet\"],\"owner\":\"RunDevelopment\"},\"xojo\":{\"title\":\"Xojo (REALbasic)\",\"owner\":\"Golmote\"},\"xquery\":{\"title\":\"XQuery\",\"require\":\"markup\",\"owner\":\"Golmote\"},\"yaml\":{\"title\":\"YAML\",\"alias\":\"yml\",\"owner\":\"hason\"},\"yang\":{\"title\":\"YANG\",\"owner\":\"RunDevelopment\"},\"zig\":{\"title\":\"Zig\",\"owner\":\"RunDevelopment\"}},\"plugins\":{\"meta\":{\"path\":\"plugins/{id}/prism-{id}\",\"link\":\"plugins/{id}/\"},\"line-highlight\":{\"title\":\"Line Highlight\",\"description\":\"Highlights specific lines and/or line ranges.\"},\"line-numbers\":{\"title\":\"Line Numbers\",\"description\":\"Line number at the beginning of code lines.\",\"owner\":\"kuba-kubula\"},\"show-invisibles\":{\"title\":\"Show Invisibles\",\"description\":\"Show hidden characters such as tabs and line breaks.\",\"optional\":[\"autolinker\",\"data-uri-highlight\"]},\"autolinker\":{\"title\":\"Autolinker\",\"description\":\"Converts URLs and emails in code to clickable links. Parses Markdown links in comments.\"},\"wpd\":{\"title\":\"WebPlatform Docs\",\"description\":\"Makes tokens link to <a href=\\\"https://webplatform.github.io/docs/\\\">WebPlatform.org documentation</a>. The links open in a new tab.\"},\"custom-class\":{\"title\":\"Custom Class\",\"description\":\"This plugin allows you to prefix Prism's default classes (<code>.comment</code> can become <code>.namespace--comment</code>) or replace them with your defined ones (like <code>.editor__comment</code>). You can even add new classes.\",\"owner\":\"dvkndn\",\"noCSS\":true},\"file-highlight\":{\"title\":\"File Highlight\",\"description\":\"Fetch external files and highlight them with Prism. Used on the Prism website itself.\",\"noCSS\":true},\"show-language\":{\"title\":\"Show Language\",\"description\":\"Display the highlighted language in code blocks (inline code does not show the label).\",\"owner\":\"nauzilus\",\"noCSS\":true,\"require\":\"toolbar\"},\"jsonp-highlight\":{\"title\":\"JSONP Highlight\",\"description\":\"Fetch content with JSONP and highlight some interesting content (e.g. GitHub/Gists or Bitbucket API).\",\"noCSS\":true,\"owner\":\"nauzilus\"},\"highlight-keywords\":{\"title\":\"Highlight Keywords\",\"description\":\"Adds special CSS classes for each keyword for fine-grained highlighting.\",\"owner\":\"vkbansal\",\"noCSS\":true},\"remove-initial-line-feed\":{\"title\":\"Remove initial line feed\",\"description\":\"Removes the initial line feed in code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"inline-color\":{\"title\":\"Inline color\",\"description\":\"Adds a small inline preview for colors in style sheets.\",\"require\":\"css-extras\",\"owner\":\"RunDevelopment\"},\"previewers\":{\"title\":\"Previewers\",\"description\":\"Previewers for angles, colors, gradients, easing and time.\",\"require\":\"css-extras\",\"owner\":\"Golmote\"},\"autoloader\":{\"title\":\"Autoloader\",\"description\":\"Automatically loads the needed languages to highlight the code blocks.\",\"owner\":\"Golmote\",\"noCSS\":true},\"keep-markup\":{\"title\":\"Keep Markup\",\"description\":\"Prevents custom markup from being dropped out during highlighting.\",\"owner\":\"Golmote\",\"optional\":\"normalize-whitespace\",\"noCSS\":true},\"command-line\":{\"title\":\"Command Line\",\"description\":\"Display a command line with a prompt and, optionally, the output/response from the commands.\",\"owner\":\"chriswells0\"},\"unescaped-markup\":{\"title\":\"Unescaped Markup\",\"description\":\"Write markup without having to escape anything.\"},\"normalize-whitespace\":{\"title\":\"Normalize Whitespace\",\"description\":\"Supports multiple operations to normalize whitespace in code blocks.\",\"owner\":\"zeitgeist87\",\"optional\":\"unescaped-markup\",\"noCSS\":true},\"data-uri-highlight\":{\"title\":\"Data-URI Highlight\",\"description\":\"Highlights data-URI contents.\",\"owner\":\"Golmote\",\"noCSS\":true},\"toolbar\":{\"title\":\"Toolbar\",\"description\":\"Attach a toolbar for plugins to easily register buttons on the top of a code block.\",\"owner\":\"mAAdhaTTah\"},\"copy-to-clipboard\":{\"title\":\"Copy to Clipboard Button\",\"description\":\"Add a button that copies the code block to the clipboard when clicked.\",\"owner\":\"mAAdhaTTah\",\"require\":\"toolbar\",\"noCSS\":true},\"download-button\":{\"title\":\"Download Button\",\"description\":\"A button in the toolbar of a code block adding a convenient way to download a code file.\",\"owner\":\"Golmote\",\"require\":\"toolbar\",\"noCSS\":true},\"match-braces\":{\"title\":\"Match braces\",\"description\":\"Highlights matching braces.\",\"owner\":\"RunDevelopment\"},\"diff-highlight\":{\"title\":\"Diff Highlight\",\"description\":\"Highlights the code inside diff blocks.\",\"owner\":\"RunDevelopment\",\"require\":\"diff\"},\"filter-highlight-all\":{\"title\":\"Filter highlightAll\",\"description\":\"Filters the elements the <code>highlightAll</code> and <code>highlightAllUnder</code> methods actually highlight.\",\"owner\":\"RunDevelopment\",\"noCSS\":true},\"treeview\":{\"title\":\"Treeview\",\"description\":\"A language with special styles to highlight file system tree structures.\",\"owner\":\"Golmote\"}}};\nif (typeof module !== 'undefined' && module.exports) { module.exports = components; }","module.exports = {\n\t// Case insensitive\n\tsupportedLangs: [\n\t\t'JavaScript',\n\t\t'HTML',\n\t\t'CSS',\n\t\t'SQL',\n\t\t'Python',\n\t\t'TypeScript',\n\t\t'Java',\n\t\t'Bash',\n\t\t'CSharp',\n\t\t'C++',\n\t\t'PHP',\n\t\t'C',\n\t\t'PowerShell',\n\t\t'Go',\n\t\t'Rust',\n\t\t'Kotlin',\n\t\t'Dart',\n\t\t'Ruby',\n\t\t'R',\n\t\t'MATLAB',\n\t\t'DAX',\n\t\t'JSON',\n\t\t'YAML',\n\t\t'Markdown',\n\t\t'Code',\n\t\t'Svelte',\n\t\t'Shell'\n\t].map((r) => r.toLowerCase())\n};\n","/**\n * @type {import(\"svelte-preprocess/dist/types\").PreprocessorGroup}\n */\nconst addScriptTags = {\n\tmarkup({ content, filename }) {\n\t\tif (filename?.endsWith('.md')) {\n\t\t\tif (!content.match(/\\<script(.*)\\>/)) {\n\t\t\t\tconst result =\n\t\t\t\t\tcontent + '\\n\\n<script context=\"module\"> </script>\\n\\n<script> </script>\\n\\n';\n\t\t\t\treturn { code: result };\n\t\t\t}\n\t\t\tif (!content.match(/\\<script(.*)context\\=\\\"module\\\"(.*)\\>/)) {\n\t\t\t\tconst result = content + '\\n\\n<script context=\"module\"> </script>\\n\\n';\n\t\t\t\treturn { code: result };\n\t\t\t}\n\t\t\tif (!content.match(/\\<script\\>/)) {\n\t\t\t\tconst result = content + '\\n\\n<script> </script>\\n\\n';\n\t\t\t\treturn { code: result };\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = addScriptTags;\n","const { getRouteHash } = require('./utils/get-route-hash.cjs');\nconst { extractQueries } = require('./extract-queries/extract-queries.cjs');\nconst { highlighter } = require('./utils/highlighter.cjs');\nconst { containsFrontmatter } = require('./frontmatter/frontmatter.regex.cjs');\n\n/**\n * If you need an @evidence-dev import in the template strings below, it must be added here to prevent a poor user experience when running a template\n * @type {{ import: string; from: `@evidence-dev/${string}` }[]}\n */\nconst injectedEvidenceImports = [\n\t{\n\t\timport: '{ pageHasQueries, routeHash, toasts }',\n\t\tfrom: '@evidence-dev/component-utilities/stores'\n\t},\n\t{ import: '{ fmt }', from: '@evidence-dev/component-utilities/formatting' },\n\t{\n\t\timport: '{ CUSTOM_FORMATTING_SETTINGS_CONTEXT_KEY }',\n\t\tfrom: '@evidence-dev/component-utilities/globalContexts'\n\t},\n\t{ import: '{ ensureInputContext }', from: '@evidence-dev/sdk/utils/svelte' },\n\t{ import: '{ profile }', from: '@evidence-dev/component-utilities/profile' },\n\t{ import: '{ Query, hasUnsetValues }', from: '@evidence-dev/sdk/usql' },\n\t{ import: '{ setQueryFunction }', from: '@evidence-dev/component-utilities/buildQuery' }\n];\n\n/**\n *\n * @param {string} filename\n * @param {boolean} componentDevelopmentMode\n * @param {Record<string, import('./extract-queries/extract-queries.cjs').Query>} duckdbQueries\n * @returns\n */\nconst createDefaultProps = function (filename, componentDevelopmentMode, duckdbQueries = {}) {\n\tconst routeH = getRouteHash(filename);\n\n\tlet queryDeclarations = '';\n\n\tconst IS_VALID_QUERY = /^([a-zA-Z_$][a-zA-Z0-9d_$]*)$/;\n\tconst validIds = Object.keys(duckdbQueries).filter(\n\t\t(query) => IS_VALID_QUERY.test(query) && !duckdbQueries[query].compileError\n\t);\n\tif (validIds.length > 0) {\n\t\t// prerendered queries: stuff without ${}\n\t\t// reactive queries: stuff with ${}\n\t\tconst IS_REACTIVE_QUERY = /\\${.*?}/s;\n\t\tconst reactiveIds = validIds.filter((id) =>\n\t\t\tIS_REACTIVE_QUERY.test(duckdbQueries[id].compiledQueryString)\n\t\t);\n\n\t\t// input queries: reactive with ${inputs...} in it\n\t\tconst IS_INPUT_QUERY = /\\${\\s*inputs\\s*\\..*?}/s;\n\t\tconst input_ids = reactiveIds.filter((id) =>\n\t\t\tIS_INPUT_QUERY.test(duckdbQueries[id].compiledQueryString)\n\t\t);\n\n\t\tconst errQueries = Object.values(duckdbQueries)\n\t\t\t.filter((q) => q.compileError)\n\t\t\t.map(\n\t\t\t\t(q) =>\n\t\t\t\t\t`const ${q.id} = Query.create(\\`${q.compiledQueryString.replaceAll('$', '\\\\$')}\\`, undefined, { id: \"${q.id}\", initialError: new Error(\\`${/** @type {string} */ (q.compileError).replaceAll('$', '\\\\$')}\\`)})`\n\t\t\t);\n\n\t\tconst queryStoreDeclarations = validIds.map((id) => {\n\t\t\treturn `\n                // Update external queries\n                if (import.meta?.hot) {\n                    import.meta.hot.on(\"evidence:queryChange\", ({queryId, content}) => {\n                        let errors = []\n                        if (!queryId) errors.push(\"Malformed event: Missing queryId\")\n                        if (!content) errors.push(\"Malformed event: Missing content\")\n                        if (errors.length) {\n                            console.warn(\"Failed to update query on serverside change!\", errors.join(\"\\\\n\"))\n                            return\n                        }\n\n                        if (queryId === \"${id}\") {\n                            __${id}Text = content\n                        }\n                        \n                    })\n                }\n\n                let ${id}InitialStates = { initialData: undefined, initialError: undefined }\n                \n                // Give initial states for these variables\n                /** @type {boolean} */\n                let __${id}HasUnresolved = hasUnsetValues\\`${duckdbQueries[id].compiledQueryString.replaceAll('`', '\\\\`')}\\`;\n                /** @type {string} */\n                let __${id}Text = \\`${duckdbQueries[id].compiledQueryString.replaceAll('`', '\\\\`')}\\`\n\n\n                if (browser) {\n                    // Data came from SSR\n                    if (data.${id}_data) {\n                        // vvv is this still used/possible?\n                        if (data.${id}_data instanceof Error) {\n                            ${id}InitialStates.initialError = data.${id}_data\n                        } else {\n                            ${id}InitialStates.initialData = data.${id}_data\n                        }\n                        if (data.${id}_columns) {\n                            ${id}InitialStates.knownColumns = data.${id}_columns\n                        }\n                    }\n                }\n\n                /** @type {import(\"@evidence-dev/sdk/usql\").QueryValue} */\n                let ${id};\n\n                $: __${id}HasUnresolved = hasUnsetValues\\`${duckdbQueries[id].compiledQueryString.replaceAll('`', '\\\\`')}\\`;\n                $: __${id}Text = \\`${duckdbQueries[id].compiledQueryString.replaceAll('`', '\\\\`')}\\`\n\n                // keep initial state around until after the query has resolved once\n                let __${id}InitialFactory = false;\n                $: if (__${id}HasUnresolved || !__${id}InitialFactory) {    \n                    if (!__${id}HasUnresolved) {\n                        __${id}Factory(__${id}Text, { noResolve: __${id}HasUnresolved, ...${id}InitialStates });\n                        __${id}InitialFactory = true;\n                    }\n                } else {\n                    __${id}Factory(__${id}Text, { noResolve: __${id}HasUnresolved });\n                }\n\n                const __${id}Factory = Query.createReactive(\n                    { callback: v => {\n                        ${id} = v\n                    }, execFn: queryFunc },\n                    { id: '${id}', ...${id}InitialStates }\n                )\n\n                // Assign a value for the initial run-through\n                // This is split because chicken / egg\n                __${id}Factory(__${id}Text, { noResolve: __${id}HasUnresolved, ...${id}InitialStates })\n\n                // Add queries to global scope inside symbols to ease debugging\n                globalThis[Symbol.for(\"${id}\")] = { get value() { return ${id} } }\n                \n                \n            `;\n\t\t});\n\n\t\t/* \n\t\t\treactivity doesn't happen on the server, so we need to manually subscribe to the inputs store\n\t\t\tand update the queries when the inputs change\n\t\t*/\n\t\tconst input_query_stores = `\n\t\tif (!browser) {\n\t\t\tonDestroy(inputs_store.subscribe((inputs) => {\n\t\t\t\t${input_ids\n\t\t\t\t\t.map(\n\t\t\t\t\t\t(id) => `\n\t\t\t\t\t\t__${id}HasUnresolved = hasUnsetValues\\`${duckdbQueries[id].compiledQueryString.replaceAll('`', '\\\\`')}\\`;\n\t\t\t\t\t\t__${id}Text = \\`${duckdbQueries[id].compiledQueryString.replaceAll('`', '\\\\`')}\\`;\n\t\t\t\t\t\t__${id}Factory(__${id}Text, { noResolve: __${id}HasUnresolved });\n\t\t\t\t`\n\t\t\t\t\t)\n\t\t\t\t\t.join('\\n')}\n\t\t\t}));\n\t\t}\n\t\t`;\n\n\t\tqueryDeclarations += `\n\t\t${errQueries.join('\\n')}\n\t\t${queryStoreDeclarations.join('\\n')}\n\t\t${input_query_stores}\n\t\t\n\t\t`;\n\t}\n\n\tlet defaultProps = `\n        import { page } from '$app/stores';\n        import { setContext, getContext, beforeUpdate, onDestroy, onMount } from 'svelte';\n\t\timport { writable, get } from 'svelte/store';\n        \n        // Functions\n\n        \n        let props;\n        export { props as data }; // little hack to make the data name not overlap\n        let { data = {}, customFormattingSettings, __db, inputs } = props;\n        $: ({ data = {}, customFormattingSettings, __db } = props);\n\n        $routeHash = '${routeH}';\n\n\t\t${\n\t\t\t/* \n\t\t\tdo not switch to $: inputs = $inputs_store\n\t\t\treactive statements do not rerun during SSR \n\t\t\t*/ ''\n\t\t}\n\t\tlet inputs_store = ensureInputContext(writable(inputs));\n\t\tonDestroy(inputs_store.subscribe((value) => inputs = value));\n\n        $: pageHasQueries.set(Object.keys(data).length > 0);\n\n        setContext(CUSTOM_FORMATTING_SETTINGS_CONTEXT_KEY, {\n            getCustomFormats: () => {\n                return customFormattingSettings.customFormats || [];\n            }\n        });\n\n\t\timport { browser, dev } from \"$app/environment\";\n\n\t\tif (!browser) {\n\t\t\tonDestroy(() => Query.emptyCache());\n\t\t}\n\n\t\tconst queryFunc = (query, query_name) => profile(__db.query, query, { query_name });\n\t\tsetQueryFunction(queryFunc);\n\n\t\tconst scoreNotifier = !dev? () => {} : (info) => {\n\t\t\ttoasts.add({\n\t\t\t\tid: Math.random(),\n\t\t\t\ttitle: info.id,\n\t\t\t\tmessage: \\`Results estimated to use \\${\n\t\t\t\t\tIntl.NumberFormat().format(info.score / (1024 * 1024))\n\t\t\t\t}mb of memory, performance may be impacted\\`,\n\t\t\t\tstatus: 'warning'\n\t\t\t}, 5000);\n\t\t};\n\n\t\tif (import.meta?.hot) {\n            if (typeof import.meta.hot.data.hmrHasRun === 'undefined') import.meta.hot.data.hmrHasRun = false\n\n\t\t\timport.meta.hot.on(\"evidence:reset-queries\", async (payload) => {\n\t\t\t\tawait $page.data.__db.updateParquetURLs(JSON.stringify(payload.latestManifest), true);\n\t\t\t\tQuery.emptyCache()\n\t\t\t\t${validIds\n\t\t\t\t\t.map((id) => `__${id}Factory(__${id}Text, { noResolve: __${id}HasUnresolved });`)\n\t\t\t\t\t.join('\\n')}\n\t\t\t})\n\t    }\n\t\t\n\t\tlet params = $page.params;\n\t\t$: params = $page.params;\n\t\t\n\t\tlet _mounted = false;\n\t\tonMount(() => (_mounted = true));\n\n        ${queryDeclarations}\n    `;\n\n\treturn `\n\t\t${injectedEvidenceImports.map((i) => `import ${i.import} from '${i.from}';`).join('\\n')}\n\t\t${defaultProps}\n\t`;\n};\n\n/**\n * @type {(componentDevelopmentMode: boolean) => import(\"svelte-preprocess/dist/types\").PreprocessorGroup}\n */\nconst processQueries = (componentDevelopmentMode) => {\n\t/**\n\t * @type {Record<string, Record<string, import(\"./extract-queries/extract-queries.cjs\").Query>>}\n\t */\n\tconst dynamicQueries = {};\n\treturn {\n\t\tmarkup({ content, filename }) {\n\t\t\tif (filename?.endsWith('.md')) {\n\t\t\t\tlet fileQueries = extractQueries(content);\n\n\t\t\t\tdynamicQueries[getRouteHash(filename)] = fileQueries.reduce((acc, q) => {\n\t\t\t\t\tacc[q.id] = q;\n\t\t\t\t\treturn acc;\n\t\t\t\t}, /** @type {typeof dynamicQueries[string]} */ ({}));\n\n\t\t\t\tconst externalQueryViews =\n\t\t\t\t\t'\\n\\n\\n' +\n\t\t\t\t\tfileQueries\n\t\t\t\t\t\t.filter((q) => !q.inline)\n\t\t\t\t\t\t.map((q) => {\n\t\t\t\t\t\t\treturn highlighter(q.compiledQueryString, q.id.toLowerCase());\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('\\n');\n\n\t\t\t\t// Page contains frontmatter\n\t\t\t\tconst frontmatter = containsFrontmatter(content);\n\t\t\t\tif (frontmatter) {\n\t\t\t\t\tconst contentWithoutFrontmatter = content.substring(frontmatter.length + 6);\n\n\t\t\t\t\tconst output =\n\t\t\t\t\t\t`---\\n${frontmatter}\\n---` + externalQueryViews + contentWithoutFrontmatter;\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcode: output\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tcode: externalQueryViews + content\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tscript({ content, filename, attributes }) {\n\t\t\tif (filename?.endsWith('.md')) {\n\t\t\t\tif (attributes.context !== 'module') {\n\t\t\t\t\tconst duckdbQueries = dynamicQueries[getRouteHash(filename)];\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcode: createDefaultProps(filename, componentDevelopmentMode, duckdbQueries) + content\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\nmodule.exports = { processQueries, injectedEvidenceImports };\n","const md5 = require('blueimp-md5');\n\nmodule.exports = {\n\t/**\n\t * Generates a unique (but consistent) hash for a route\n\t * @param {string} filename\n\t * @example /src/pages/+page.md /src/pages/my-route/+page.md\n\t * @returns string\n\t */\n\tgetRouteHash: (filename) => {\n\t\tconst isIndex = filename.split('/src/pages')[1] === '/+page.md';\n\t\tif (isIndex) return md5('/');\n\n\t\tlet route = filename\n\t\t\t.split('/src/pages')?.[1]\n\t\t\t.replace('.md', '')\n\t\t\t.replace(/\\/\\+page/g, '');\n\t\tif (!route) {\n\t\t\tthrow new Error(\n\t\t\t\t`Failed to generate route hash for ${filename} (${JSON.stringify({ isIndex })})`\n\t\t\t);\n\t\t}\n\t\treturn md5(route);\n\t}\n};\n","const unified = require('unified');\nconst remarkParse = require('remark-parse');\nconst visit = require('unist-util-visit');\nconst fs = require('fs');\nconst getPrismLangs = require('../utils/get-prism-langs.cjs');\nconst { parseFrontmatter } = require('../frontmatter/parse-frontmatter.cjs');\nconst chalk = require('chalk');\n/** @typedef {{ id: string, compileError?: string, compiledQueryString: string, inputQueryString: string, compiled: boolean, inline: boolean }} Query */\n\n/** @type {Record<string, boolean>} */\nconst warnedExternalQueries = {};\n\n/**\n *\n * @param {string} externalQuery\n * @param {string} id\n * @returns {Query | undefined}\n */\nconst readFileToQuery = (externalQuery, id) => {\n\ttry {\n\t\tconst content = fs.readFileSync(`./queries/${externalQuery}`).toString().trim();\n\t\treturn {\n\t\t\tid: id.toLowerCase(),\n\t\t\tcompiledQueryString: content,\n\t\t\tinputQueryString: content,\n\t\t\tcompiled: false,\n\t\t\tinline: false\n\t\t};\n\t} catch {\n\t\tconsole.warn(`Failed to load sql file ${externalQuery}`);\n\t\treturn undefined;\n\t}\n};\n\n// Unified parser step to ignore indented code blocks.\n// Adapted from the mdsvex source, here: https://github.com/pngwn/MDsveX/blob/master/packages/mdsvex/src/parsers/index.ts\n// Discussion & background here:  https://github.com/evidence-dev/evidence/issues/286\n/**\n * @this {import('unified').Processor}\n */\nconst ignoreIndentedCode = function () {\n\tconst Parser = this.Parser;\n\tconst block_tokenizers = Parser.prototype.blockTokenizers;\n\tblock_tokenizers.indentedCode = () => true;\n};\n\n/**\n * @param {string} content File content\n * @param {string} [filename] File name\n * @returns {Query[]}\n */\nconst extractExternalQueries = (content, filename) => {\n\tconst frontmatter = parseFrontmatter(content);\n\tif (!frontmatter) return [];\n\tif (!frontmatter.queries) return [];\n\tif (!Array.isArray(frontmatter.queries)) {\n\t\tif (filename) {\n\t\t\tconsole.warn(\n\t\t\t\t`Malformed frontmatter found in ${filename}. Unable to extract external queries.`\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.warn('Malformed frontmatter found. Unable to extract external queries.');\n\t\t}\n\t\treturn [];\n\t}\n\t/** @type {unknown[]} */\n\tconst queries = frontmatter.queries;\n\n\t/**\n\t *\n\t * @param {string} externalQuery\n\t * @returns {boolean}\n\t */\n\tconst validateExternalQuery = (externalQuery) => {\n\t\tif (!externalQuery.endsWith('.sql')) {\n\t\t\tif (!warnedExternalQueries[externalQuery]) {\n\t\t\t\twarnedExternalQueries[externalQuery] = true;\n\t\t\t\tconsole.warn(\n\t\t\t\t\tchalk.bold.red(`! ${externalQuery}`) +\n\t\t\t\t\t\tchalk.gray(' does not appear to be a .sql file, and will not be loaded')\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\treturn queries\n\t\t.map((externalQuery) => {\n\t\t\tif (typeof externalQuery === 'string') {\n\t\t\t\tif (!validateExternalQuery(externalQuery)) return false;\n\t\t\t\tconst id = externalQuery.split('.sql')[0].replace('/', '_').replace('\\\\', '_');\n\t\t\t\treturn readFileToQuery(externalQuery, id);\n\t\t\t} else if (externalQuery && typeof externalQuery === 'object') {\n\t\t\t\tconst [usedKey, value] = Object.entries(externalQuery)[0] ?? ['', undefined];\n\n\t\t\t\t// Note; this is to be obseleted, as the import syntax evolves, but for now only one key should be used.\n\t\t\t\tif (Object.keys(externalQuery).length > 1) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`ExternalQuery object has more than one key, this may lead to unintended behavior. Only ${usedKey}: ${value} will be imported.`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (!validateExternalQuery(value)) return false;\n\t\t\t\treturn readFileToQuery(value, usedKey);\n\t\t\t}\n\t\t})\n\t\t.filter((x) => !!x); // filter out queries that returned false;\n};\n\n/**\n * @param {string} content Raw File Content\n * @returns {Query[]}\n */\nconst extractInlineQueries = (content) => {\n\t/** @type {Query[]} */\n\tlet queries = [];\n\tlet tree = unified().use(remarkParse).use(ignoreIndentedCode).parse(content);\n\tconst prismLangs = getPrismLangs();\n\n\tvisit(tree, 'code', function (/** @type {import(\"mdast\").Code} */ node) {\n\t\tlet id = node.lang ?? 'untitled';\n\t\tif (id.toLowerCase() === 'sql' && node.meta) {\n\t\t\tid = node.meta;\n\t\t}\n\t\tif (!prismLangs.has(id.toLowerCase()) && id.toLowerCase() !== 'plaintext') {\n\t\t\t// Prevent prism code blocks from being interpreted as queries\n\t\t\tlet compiledQueryString = node.value.trim(); // refs get compiled and sent to db orchestrator\n\t\t\tlet inputQueryString = compiledQueryString; // original, as written\n\t\t\tlet compiled = false; // default flag, switched to true if query is compiled\n\t\t\tqueries.push({\n\t\t\t\tid,\n\t\t\t\tcompiledQueryString,\n\t\t\t\tinputQueryString,\n\t\t\t\tcompiled,\n\t\t\t\tinline: true\n\t\t\t});\n\t\t}\n\t});\n\treturn queries;\n};\n\nconst strictBuild = process.env.VITE_BUILD_STRICT === 'true';\nconst circularRefErrorMsg = 'Compiler error: circular reference';\n\n/**\n * @param {string} content\n * @returns {Query[]}\n */\nconst extractQueries = (content) => {\n\t/** @type {Query[]} */\n\tconst queries = [];\n\n\t// todo: second parameter is filename but we don't have that here?\n\tqueries.push(...extractExternalQueries(content));\n\tqueries.push(...extractInlineQueries(content));\n\n\t// Handle query chaining:\n\tconst maxIterations = 15;\n\tconst queryIds = new Set(queries.map((d) => d.id));\n\tconst interpolated_variables = new Set();\n\n\tfor (let i = 0; i <= maxIterations; i++) {\n\t\tqueries.forEach((query) => {\n\t\t\tconst startTemplateInterpolation = /[^\\\\](\\$\\{)/g;\n\t\t\tconst validTemplateInterpolation = /[^\\\\]\\$\\{((?:.|\\s)+?)\\}/g;\n\n\t\t\t/*\n\t\t\t\tThis is a somewhat naive way of looking for invalid template strings\n\t\t\t\tIt currently tests for ${} and ${ cases, but is unable to detect } cases\n\t\t\t*/\n\t\t\tconst hasTemplates = startTemplateInterpolation.exec(query.inputQueryString);\n\t\t\tconst hasValidTemplates = validTemplateInterpolation.exec(query.inputQueryString);\n\t\t\tif (hasTemplates?.length !== hasValidTemplates?.length) {\n\t\t\t\tif (query.inputQueryString.includes('${}')) {\n\t\t\t\t\tquery.compileError = 'Query contains an empty template literal (${})';\n\t\t\t\t} else {\n\t\t\t\t\tquery.compileError = 'Query contains invalid template literal (unmatched ${ and }';\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst references = query.compiledQueryString.match(/\\${.*?\\}/gi);\n\t\t\tif (references && references.some((d) => !interpolated_variables.has(d))) {\n\t\t\t\treferences.forEach((reference) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst referencedQueryID = reference.replace('${', '').replace('}', '').trim();\n\t\t\t\t\t\tif (!queryIds.has(referencedQueryID)) {\n\t\t\t\t\t\t\tinterpolated_variables.add(reference);\n\t\t\t\t\t\t} else if (i >= maxIterations) {\n\t\t\t\t\t\t\tthrow new Error(circularRefErrorMsg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst referencedQuery = queries.find((d) => d.id === referencedQueryID);\n\t\t\t\t\t\t\tif (!referencedQuery) {\n\t\t\t\t\t\t\t\t// should be unreachable\n\t\t\t\t\t\t\t\tthrow new Error(`Referenced query not found. (Referenced ${referencedQueryID})`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!query.inline && referencedQuery.inline) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t`Cannot reference inline query from SQL File. (Referenced ${referencedQueryID})`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst queryString = `(${referencedQuery.compiledQueryString})`;\n\t\t\t\t\t\t\tquery.compiledQueryString = query.compiledQueryString.replace(\n\t\t\t\t\t\t\t\treference,\n\t\t\t\t\t\t\t\t// this actually replaces each $ with $$\n\t\t\t\t\t\t\t\t// this is to avoid [this behaviour](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_the_replacement)\n\t\t\t\t\t\t\t\tqueryString.replaceAll('$', '$$$$')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tquery.compiled = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (/** @type {any} */ _e) {\n\t\t\t\t\t\t// if error is unknown use default circular ref. error\n\t\t\t\t\t\tconst e =\n\t\t\t\t\t\t\t_e.message === undefined || _e.message === null ? Error(circularRefErrorMsg) : _e;\n\t\t\t\t\t\tquery.compileError = e.message;\n\t\t\t\t\t\tquery.compiledQueryString = e.message;\n\t\t\t\t\t\t// if build is strict and we detect an error, force a failure\n\t\t\t\t\t\tif (strictBuild) {\n\t\t\t\t\t\t\tthrow new Error(e.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\treturn queries;\n};\n\n/**\n *\n * @param {string} content File Content\n *\n * @param {string} content File Content\n * @returns {string[]}\n */\nconst getQueryIds = (content) => {\n\treturn extractQueries(content).map((q) => q.id);\n};\n\nmodule.exports = {\n\textractQueries,\n\tgetQueryIds\n};\n","const selector = require('hast-util-select');\n\nconst { selectAll } = selector;\n\n/**\n * @param {Record<string, string>} additions\n * @returns {(node: import(\"hast\").Element) => void}\n */\nmodule.exports = (additions) => {\n\tconst adders = Object.entries(additions).map(adder);\n\treturn (node) => adders.forEach((a) => a(node));\n};\n\n/**\n * @param {[string, string]} entry\n * @returns {(node: import(\"hast\").Element) => void}\n */\nconst adder = ([selector, className]) => {\n\tconst writer = write(className);\n\treturn (node) => selectAll(selector, node).forEach(writer);\n};\n\n/**\n * @param {string} className\n * @returns {(node: import(\"hast\").Element) => void}\n */\nconst write = (className) => {\n\treturn ({ properties }) => {\n\t\tif (!properties) return;\n\t\tif (!properties.className) properties.className = className;\n\t\telse properties.className += ` ${className}`;\n\t};\n};\n","/**\n * @type {(componentDevelopmentMode: boolean) => import(\"svelte-preprocess/dist/types\").PreprocessorGroup}\n */\nmodule.exports = () => {\n\t/**\n\t * This ensures that we don't read ./handle-og.svelte more than once\n\t * @type {string}\n\t */\n\tlet handleOgContent;\n\treturn {\n\t\tmarkup: ({ content, filename }) => {\n\t\t\tif (typeof filename === 'undefined') return;\n\t\t\tif (!filename.endsWith('+page.md')) return;\n\t\t\tif (!handleOgContent) handleOgContent = require('./handle-og.cjs');\n\t\t\treturn {\n\t\t\t\tcode: handleOgContent + content\n\t\t\t};\n\t\t},\n\t\tscript: ({ content, filename, attributes }) => {\n\t\t\tif (!filename?.endsWith('+page.md')) return;\n\t\t\tif (attributes.context === 'module') {\n\t\t\t\tif (!content.includes('export const metadata =')) {\n\t\t\t\t\t// There is no frontmatter, and we want to make sure that it as at least defined.\n\t\t\t\t\t// Technically this won't _break_ things, just spam the logs with a vite warning.\n\t\t\t\t\treturn { code: content + ';const metadata = undefined;' };\n\t\t\t\t} else {\n\t\t\t\t\t// exporting makes tailwind break HMR\n\t\t\t\t\treturn { code: content.replace('export const metadata =', 'const metadata =') };\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn { code: 'import { addBasePath } from \"@evidence-dev/sdk/utils/svelte\";' + content };\n\t\t\t}\n\t\t}\n\t};\n};\n","const fs = require('fs');\n\n/**\n * @param {string} originalString\n * @returns {string}\n */\nfunction injectPartials(originalString) {\n\tconst r = /\\{@partial\\s+\"(.*?)\"\\s*\\}/g;\n\n\tfor (const match of originalString.matchAll(r) ?? []) {\n\t\tconst filename = match[1];\n\t\t// There is an error with parcel that prevents the use of the \"path\" library.\n\t\tconst content = fs.readFileSync(`./partials/${filename}`).toString();\n\n\t\toriginalString = originalString.replace(match[0], content);\n\t}\n\n\treturn originalString;\n}\n\n/** @type {import('svelte/compiler').PreprocessorGroup & { injectPartials: typeof injectPartials }} */\nmodule.exports = {\n\tmarkup: ({ content, filename }) => {\n\t\tif (typeof filename === 'undefined') return;\n\t\tif (!filename.endsWith('+page.md')) return;\n\t\treturn {\n\t\t\tcode: injectPartials(content)\n\t\t};\n\t},\n\tinjectPartials\n};\n"],"names":[],"version":3,"file":"index.cjs.map","sourceRoot":"../../../../"}